program(1.0)
[buildInfo = dict<tensor<string, []>, tensor<string, []>>({{"coremlc-component-MIL", "3405.2.1"}, {"coremlc-version", "3404.23.1"}, {"coremltools-component-torch", "2.8.0"}, {"coremltools-source-dialect", "TorchScript"}, {"coremltools-version", "8.3.0"}})]
{
    func main<ios15>(tensor<fp32, [1, 3, 224, 224]> input_1) {
            tensor<fp32, []> input_1__scaled___y_0 = const()[name = tensor<string, []>("input_1__scaled___y_0"), val = tensor<fp32, []>(0x1.010102p-8)];
            tensor<fp32, [1, 3, 224, 224]> input_1__scaled__ = mul(x = input_1, y = input_1__scaled___y_0)[name = tensor<string, []>("input_1__scaled__")];
            tensor<string, []> input_1_pad_type_0 = const()[name = tensor<string, []>("input_1_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_1_pad_0 = const()[name = tensor<string, []>("input_1_pad_0"), val = tensor<int32, [4]>([3, 3, 3, 3])];
            tensor<int32, [2]> input_1_strides_0 = const()[name = tensor<string, []>("input_1_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_1_dilations_0 = const()[name = tensor<string, []>("input_1_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_1_groups_0 = const()[name = tensor<string, []>("input_1_groups_0"), val = tensor<int32, []>(1)];
            tensor<string, []> input_1_to_fp16_dtype_0 = const()[name = tensor<string, []>("input_1_to_fp16_dtype_0"), val = tensor<string, []>("fp16")];
            tensor<fp16, [64, 3, 7, 7]> const_0_to_fp16 = const()[name = tensor<string, []>("const_0_to_fp16"), val = tensor<fp16, [64, 3, 7, 7]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(64)))];
            tensor<fp16, [64]> const_1_to_fp16 = const()[name = tensor<string, []>("const_1_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(18944)))];
            tensor<fp16, [1, 3, 224, 224]> input_1_to_fp16 = cast(dtype = input_1_to_fp16_dtype_0, x = input_1__scaled__)[name = tensor<string, []>("cast_2")];
            tensor<fp16, [1, 64, 112, 112]> input_3_cast_fp16 = conv(bias = const_1_to_fp16, dilations = input_1_dilations_0, groups = input_1_groups_0, pad = input_1_pad_0, pad_type = input_1_pad_type_0, strides = input_1_strides_0, weight = const_0_to_fp16, x = input_1_to_fp16)[name = tensor<string, []>("input_3_cast_fp16")];
            tensor<fp16, [1, 64, 112, 112]> input_5_cast_fp16 = relu(x = input_3_cast_fp16)[name = tensor<string, []>("input_5_cast_fp16")];
            tensor<int32, [2]> var_36 = const()[name = tensor<string, []>("op_36"), val = tensor<int32, [2]>([3, 3])];
            tensor<int32, [2]> var_37 = const()[name = tensor<string, []>("op_37"), val = tensor<int32, [2]>([2, 2])];
            tensor<string, []> input_7_pad_type_0 = const()[name = tensor<string, []>("input_7_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_7_pad_0 = const()[name = tensor<string, []>("input_7_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<bool, []> input_7_ceil_mode_0 = const()[name = tensor<string, []>("input_7_ceil_mode_0"), val = tensor<bool, []>(false)];
            tensor<fp16, [1, 64, 56, 56]> input_7_cast_fp16 = max_pool(ceil_mode = input_7_ceil_mode_0, kernel_sizes = var_36, pad = input_7_pad_0, pad_type = input_7_pad_type_0, strides = var_37, x = input_5_cast_fp16)[name = tensor<string, []>("input_7_cast_fp16")];
            tensor<string, []> input_9_pad_type_0 = const()[name = tensor<string, []>("input_9_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_9_pad_0 = const()[name = tensor<string, []>("input_9_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_9_strides_0 = const()[name = tensor<string, []>("input_9_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_9_dilations_0 = const()[name = tensor<string, []>("input_9_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_9_groups_0 = const()[name = tensor<string, []>("input_9_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_2_to_fp16 = const()[name = tensor<string, []>("const_2_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(19136)))];
            tensor<fp16, [64]> const_3_to_fp16 = const()[name = tensor<string, []>("const_3_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(92928)))];
            tensor<fp16, [1, 64, 56, 56]> input_11_cast_fp16 = conv(bias = const_3_to_fp16, dilations = input_9_dilations_0, groups = input_9_groups_0, pad = input_9_pad_0, pad_type = input_9_pad_type_0, strides = input_9_strides_0, weight = const_2_to_fp16, x = input_7_cast_fp16)[name = tensor<string, []>("input_11_cast_fp16")];
            tensor<fp16, [1, 64, 56, 56]> input_13_cast_fp16 = relu(x = input_11_cast_fp16)[name = tensor<string, []>("input_13_cast_fp16")];
            tensor<string, []> input_15_pad_type_0 = const()[name = tensor<string, []>("input_15_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_15_pad_0 = const()[name = tensor<string, []>("input_15_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_15_strides_0 = const()[name = tensor<string, []>("input_15_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_15_dilations_0 = const()[name = tensor<string, []>("input_15_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_15_groups_0 = const()[name = tensor<string, []>("input_15_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_4_to_fp16 = const()[name = tensor<string, []>("const_4_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(93120)))];
            tensor<fp16, [64]> const_5_to_fp16 = const()[name = tensor<string, []>("const_5_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(166912)))];
            tensor<fp16, [1, 64, 56, 56]> out_1_cast_fp16 = conv(bias = const_5_to_fp16, dilations = input_15_dilations_0, groups = input_15_groups_0, pad = input_15_pad_0, pad_type = input_15_pad_type_0, strides = input_15_strides_0, weight = const_4_to_fp16, x = input_13_cast_fp16)[name = tensor<string, []>("out_1_cast_fp16")];
            tensor<fp16, [1, 64, 56, 56]> input_17_cast_fp16 = add(x = out_1_cast_fp16, y = input_7_cast_fp16)[name = tensor<string, []>("input_17_cast_fp16")];
            tensor<fp16, [1, 64, 56, 56]> input_19_cast_fp16 = relu(x = input_17_cast_fp16)[name = tensor<string, []>("input_19_cast_fp16")];
            tensor<string, []> input_21_pad_type_0 = const()[name = tensor<string, []>("input_21_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_21_pad_0 = const()[name = tensor<string, []>("input_21_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_21_strides_0 = const()[name = tensor<string, []>("input_21_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_21_dilations_0 = const()[name = tensor<string, []>("input_21_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_21_groups_0 = const()[name = tensor<string, []>("input_21_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_6_to_fp16 = const()[name = tensor<string, []>("const_6_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(167104)))];
            tensor<fp16, [64]> const_7_to_fp16 = const()[name = tensor<string, []>("const_7_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(240896)))];
            tensor<fp16, [1, 64, 56, 56]> input_23_cast_fp16 = conv(bias = const_7_to_fp16, dilations = input_21_dilations_0, groups = input_21_groups_0, pad = input_21_pad_0, pad_type = input_21_pad_type_0, strides = input_21_strides_0, weight = const_6_to_fp16, x = input_19_cast_fp16)[name = tensor<string, []>("input_23_cast_fp16")];
            tensor<fp16, [1, 64, 56, 56]> input_25_cast_fp16 = relu(x = input_23_cast_fp16)[name = tensor<string, []>("input_25_cast_fp16")];
            tensor<string, []> input_27_pad_type_0 = const()[name = tensor<string, []>("input_27_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_27_pad_0 = const()[name = tensor<string, []>("input_27_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_27_strides_0 = const()[name = tensor<string, []>("input_27_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_27_dilations_0 = const()[name = tensor<string, []>("input_27_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_27_groups_0 = const()[name = tensor<string, []>("input_27_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [64, 64, 3, 3]> const_8_to_fp16 = const()[name = tensor<string, []>("const_8_to_fp16"), val = tensor<fp16, [64, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(241088)))];
            tensor<fp16, [64]> const_9_to_fp16 = const()[name = tensor<string, []>("const_9_to_fp16"), val = tensor<fp16, [64]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(314880)))];
            tensor<fp16, [1, 64, 56, 56]> out_3_cast_fp16 = conv(bias = const_9_to_fp16, dilations = input_27_dilations_0, groups = input_27_groups_0, pad = input_27_pad_0, pad_type = input_27_pad_type_0, strides = input_27_strides_0, weight = const_8_to_fp16, x = input_25_cast_fp16)[name = tensor<string, []>("out_3_cast_fp16")];
            tensor<fp16, [1, 64, 56, 56]> input_29_cast_fp16 = add(x = out_3_cast_fp16, y = input_19_cast_fp16)[name = tensor<string, []>("input_29_cast_fp16")];
            tensor<fp16, [1, 64, 56, 56]> input_31_cast_fp16 = relu(x = input_29_cast_fp16)[name = tensor<string, []>("input_31_cast_fp16")];
            tensor<string, []> input_33_pad_type_0 = const()[name = tensor<string, []>("input_33_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_33_pad_0 = const()[name = tensor<string, []>("input_33_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_33_strides_0 = const()[name = tensor<string, []>("input_33_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_33_dilations_0 = const()[name = tensor<string, []>("input_33_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_33_groups_0 = const()[name = tensor<string, []>("input_33_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 64, 3, 3]> const_10_to_fp16 = const()[name = tensor<string, []>("const_10_to_fp16"), val = tensor<fp16, [128, 64, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(315072)))];
            tensor<fp16, [128]> const_11_to_fp16 = const()[name = tensor<string, []>("const_11_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(462592)))];
            tensor<fp16, [1, 128, 28, 28]> input_35_cast_fp16 = conv(bias = const_11_to_fp16, dilations = input_33_dilations_0, groups = input_33_groups_0, pad = input_33_pad_0, pad_type = input_33_pad_type_0, strides = input_33_strides_0, weight = const_10_to_fp16, x = input_31_cast_fp16)[name = tensor<string, []>("input_35_cast_fp16")];
            tensor<fp16, [1, 128, 28, 28]> input_37_cast_fp16 = relu(x = input_35_cast_fp16)[name = tensor<string, []>("input_37_cast_fp16")];
            tensor<string, []> input_39_pad_type_0 = const()[name = tensor<string, []>("input_39_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_39_pad_0 = const()[name = tensor<string, []>("input_39_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_39_strides_0 = const()[name = tensor<string, []>("input_39_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_39_dilations_0 = const()[name = tensor<string, []>("input_39_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_39_groups_0 = const()[name = tensor<string, []>("input_39_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> const_12_to_fp16 = const()[name = tensor<string, []>("const_12_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(462912)))];
            tensor<fp16, [128]> const_13_to_fp16 = const()[name = tensor<string, []>("const_13_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(757888)))];
            tensor<fp16, [1, 128, 28, 28]> out_5_cast_fp16 = conv(bias = const_13_to_fp16, dilations = input_39_dilations_0, groups = input_39_groups_0, pad = input_39_pad_0, pad_type = input_39_pad_type_0, strides = input_39_strides_0, weight = const_12_to_fp16, x = input_37_cast_fp16)[name = tensor<string, []>("out_5_cast_fp16")];
            tensor<string, []> input_41_pad_type_0 = const()[name = tensor<string, []>("input_41_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_41_strides_0 = const()[name = tensor<string, []>("input_41_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [4]> input_41_pad_0 = const()[name = tensor<string, []>("input_41_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_41_dilations_0 = const()[name = tensor<string, []>("input_41_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_41_groups_0 = const()[name = tensor<string, []>("input_41_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 64, 1, 1]> const_14_to_fp16 = const()[name = tensor<string, []>("const_14_to_fp16"), val = tensor<fp16, [128, 64, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(758208)))];
            tensor<fp16, [128]> const_15_to_fp16 = const()[name = tensor<string, []>("const_15_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(774656)))];
            tensor<fp16, [1, 128, 28, 28]> identity_1_cast_fp16 = conv(bias = const_15_to_fp16, dilations = input_41_dilations_0, groups = input_41_groups_0, pad = input_41_pad_0, pad_type = input_41_pad_type_0, strides = input_41_strides_0, weight = const_14_to_fp16, x = input_31_cast_fp16)[name = tensor<string, []>("identity_1_cast_fp16")];
            tensor<fp16, [1, 128, 28, 28]> input_43_cast_fp16 = add(x = out_5_cast_fp16, y = identity_1_cast_fp16)[name = tensor<string, []>("input_43_cast_fp16")];
            tensor<fp16, [1, 128, 28, 28]> input_45_cast_fp16 = relu(x = input_43_cast_fp16)[name = tensor<string, []>("input_45_cast_fp16")];
            tensor<string, []> input_47_pad_type_0 = const()[name = tensor<string, []>("input_47_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_47_pad_0 = const()[name = tensor<string, []>("input_47_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_47_strides_0 = const()[name = tensor<string, []>("input_47_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_47_dilations_0 = const()[name = tensor<string, []>("input_47_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_47_groups_0 = const()[name = tensor<string, []>("input_47_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> const_16_to_fp16 = const()[name = tensor<string, []>("const_16_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(774976)))];
            tensor<fp16, [128]> const_17_to_fp16 = const()[name = tensor<string, []>("const_17_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1069952)))];
            tensor<fp16, [1, 128, 28, 28]> input_49_cast_fp16 = conv(bias = const_17_to_fp16, dilations = input_47_dilations_0, groups = input_47_groups_0, pad = input_47_pad_0, pad_type = input_47_pad_type_0, strides = input_47_strides_0, weight = const_16_to_fp16, x = input_45_cast_fp16)[name = tensor<string, []>("input_49_cast_fp16")];
            tensor<fp16, [1, 128, 28, 28]> input_51_cast_fp16 = relu(x = input_49_cast_fp16)[name = tensor<string, []>("input_51_cast_fp16")];
            tensor<string, []> input_53_pad_type_0 = const()[name = tensor<string, []>("input_53_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_53_pad_0 = const()[name = tensor<string, []>("input_53_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_53_strides_0 = const()[name = tensor<string, []>("input_53_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_53_dilations_0 = const()[name = tensor<string, []>("input_53_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_53_groups_0 = const()[name = tensor<string, []>("input_53_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [128, 128, 3, 3]> const_18_to_fp16 = const()[name = tensor<string, []>("const_18_to_fp16"), val = tensor<fp16, [128, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1070272)))];
            tensor<fp16, [128]> const_19_to_fp16 = const()[name = tensor<string, []>("const_19_to_fp16"), val = tensor<fp16, [128]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1365248)))];
            tensor<fp16, [1, 128, 28, 28]> out_7_cast_fp16 = conv(bias = const_19_to_fp16, dilations = input_53_dilations_0, groups = input_53_groups_0, pad = input_53_pad_0, pad_type = input_53_pad_type_0, strides = input_53_strides_0, weight = const_18_to_fp16, x = input_51_cast_fp16)[name = tensor<string, []>("out_7_cast_fp16")];
            tensor<fp16, [1, 128, 28, 28]> input_55_cast_fp16 = add(x = out_7_cast_fp16, y = input_45_cast_fp16)[name = tensor<string, []>("input_55_cast_fp16")];
            tensor<fp16, [1, 128, 28, 28]> input_57_cast_fp16 = relu(x = input_55_cast_fp16)[name = tensor<string, []>("input_57_cast_fp16")];
            tensor<string, []> input_59_pad_type_0 = const()[name = tensor<string, []>("input_59_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_59_pad_0 = const()[name = tensor<string, []>("input_59_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_59_strides_0 = const()[name = tensor<string, []>("input_59_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_59_dilations_0 = const()[name = tensor<string, []>("input_59_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_59_groups_0 = const()[name = tensor<string, []>("input_59_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 128, 3, 3]> const_20_to_fp16 = const()[name = tensor<string, []>("const_20_to_fp16"), val = tensor<fp16, [256, 128, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1365568)))];
            tensor<fp16, [256]> const_21_to_fp16 = const()[name = tensor<string, []>("const_21_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1955456)))];
            tensor<fp16, [1, 256, 14, 14]> input_61_cast_fp16 = conv(bias = const_21_to_fp16, dilations = input_59_dilations_0, groups = input_59_groups_0, pad = input_59_pad_0, pad_type = input_59_pad_type_0, strides = input_59_strides_0, weight = const_20_to_fp16, x = input_57_cast_fp16)[name = tensor<string, []>("input_61_cast_fp16")];
            tensor<fp16, [1, 256, 14, 14]> input_63_cast_fp16 = relu(x = input_61_cast_fp16)[name = tensor<string, []>("input_63_cast_fp16")];
            tensor<string, []> input_65_pad_type_0 = const()[name = tensor<string, []>("input_65_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_65_pad_0 = const()[name = tensor<string, []>("input_65_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_65_strides_0 = const()[name = tensor<string, []>("input_65_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_65_dilations_0 = const()[name = tensor<string, []>("input_65_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_65_groups_0 = const()[name = tensor<string, []>("input_65_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 256, 3, 3]> const_22_to_fp16 = const()[name = tensor<string, []>("const_22_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(1956032)))];
            tensor<fp16, [256]> const_23_to_fp16 = const()[name = tensor<string, []>("const_23_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3135744)))];
            tensor<fp16, [1, 256, 14, 14]> out_9_cast_fp16 = conv(bias = const_23_to_fp16, dilations = input_65_dilations_0, groups = input_65_groups_0, pad = input_65_pad_0, pad_type = input_65_pad_type_0, strides = input_65_strides_0, weight = const_22_to_fp16, x = input_63_cast_fp16)[name = tensor<string, []>("out_9_cast_fp16")];
            tensor<string, []> input_67_pad_type_0 = const()[name = tensor<string, []>("input_67_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_67_strides_0 = const()[name = tensor<string, []>("input_67_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [4]> input_67_pad_0 = const()[name = tensor<string, []>("input_67_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_67_dilations_0 = const()[name = tensor<string, []>("input_67_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_67_groups_0 = const()[name = tensor<string, []>("input_67_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 128, 1, 1]> const_24_to_fp16 = const()[name = tensor<string, []>("const_24_to_fp16"), val = tensor<fp16, [256, 128, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3136320)))];
            tensor<fp16, [256]> const_25_to_fp16 = const()[name = tensor<string, []>("const_25_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3201920)))];
            tensor<fp16, [1, 256, 14, 14]> identity_3_cast_fp16 = conv(bias = const_25_to_fp16, dilations = input_67_dilations_0, groups = input_67_groups_0, pad = input_67_pad_0, pad_type = input_67_pad_type_0, strides = input_67_strides_0, weight = const_24_to_fp16, x = input_57_cast_fp16)[name = tensor<string, []>("identity_3_cast_fp16")];
            tensor<fp16, [1, 256, 14, 14]> input_69_cast_fp16 = add(x = out_9_cast_fp16, y = identity_3_cast_fp16)[name = tensor<string, []>("input_69_cast_fp16")];
            tensor<fp16, [1, 256, 14, 14]> input_71_cast_fp16 = relu(x = input_69_cast_fp16)[name = tensor<string, []>("input_71_cast_fp16")];
            tensor<string, []> input_73_pad_type_0 = const()[name = tensor<string, []>("input_73_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_73_pad_0 = const()[name = tensor<string, []>("input_73_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_73_strides_0 = const()[name = tensor<string, []>("input_73_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_73_dilations_0 = const()[name = tensor<string, []>("input_73_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_73_groups_0 = const()[name = tensor<string, []>("input_73_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 256, 3, 3]> const_26_to_fp16 = const()[name = tensor<string, []>("const_26_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(3202496)))];
            tensor<fp16, [256]> const_27_to_fp16 = const()[name = tensor<string, []>("const_27_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4382208)))];
            tensor<fp16, [1, 256, 14, 14]> input_75_cast_fp16 = conv(bias = const_27_to_fp16, dilations = input_73_dilations_0, groups = input_73_groups_0, pad = input_73_pad_0, pad_type = input_73_pad_type_0, strides = input_73_strides_0, weight = const_26_to_fp16, x = input_71_cast_fp16)[name = tensor<string, []>("input_75_cast_fp16")];
            tensor<fp16, [1, 256, 14, 14]> input_77_cast_fp16 = relu(x = input_75_cast_fp16)[name = tensor<string, []>("input_77_cast_fp16")];
            tensor<string, []> input_79_pad_type_0 = const()[name = tensor<string, []>("input_79_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_79_pad_0 = const()[name = tensor<string, []>("input_79_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_79_strides_0 = const()[name = tensor<string, []>("input_79_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_79_dilations_0 = const()[name = tensor<string, []>("input_79_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_79_groups_0 = const()[name = tensor<string, []>("input_79_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [256, 256, 3, 3]> const_28_to_fp16 = const()[name = tensor<string, []>("const_28_to_fp16"), val = tensor<fp16, [256, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(4382784)))];
            tensor<fp16, [256]> const_29_to_fp16 = const()[name = tensor<string, []>("const_29_to_fp16"), val = tensor<fp16, [256]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5562496)))];
            tensor<fp16, [1, 256, 14, 14]> out_11_cast_fp16 = conv(bias = const_29_to_fp16, dilations = input_79_dilations_0, groups = input_79_groups_0, pad = input_79_pad_0, pad_type = input_79_pad_type_0, strides = input_79_strides_0, weight = const_28_to_fp16, x = input_77_cast_fp16)[name = tensor<string, []>("out_11_cast_fp16")];
            tensor<fp16, [1, 256, 14, 14]> input_81_cast_fp16 = add(x = out_11_cast_fp16, y = input_71_cast_fp16)[name = tensor<string, []>("input_81_cast_fp16")];
            tensor<fp16, [1, 256, 14, 14]> input_83_cast_fp16 = relu(x = input_81_cast_fp16)[name = tensor<string, []>("input_83_cast_fp16")];
            tensor<string, []> input_85_pad_type_0 = const()[name = tensor<string, []>("input_85_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_85_pad_0 = const()[name = tensor<string, []>("input_85_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_85_strides_0 = const()[name = tensor<string, []>("input_85_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [2]> input_85_dilations_0 = const()[name = tensor<string, []>("input_85_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_85_groups_0 = const()[name = tensor<string, []>("input_85_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 256, 3, 3]> const_30_to_fp16 = const()[name = tensor<string, []>("const_30_to_fp16"), val = tensor<fp16, [512, 256, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(5563072)))];
            tensor<fp16, [512]> const_31_to_fp16 = const()[name = tensor<string, []>("const_31_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7922432)))];
            tensor<fp16, [1, 512, 7, 7]> input_87_cast_fp16 = conv(bias = const_31_to_fp16, dilations = input_85_dilations_0, groups = input_85_groups_0, pad = input_85_pad_0, pad_type = input_85_pad_type_0, strides = input_85_strides_0, weight = const_30_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("input_87_cast_fp16")];
            tensor<fp16, [1, 512, 7, 7]> input_89_cast_fp16 = relu(x = input_87_cast_fp16)[name = tensor<string, []>("input_89_cast_fp16")];
            tensor<string, []> input_91_pad_type_0 = const()[name = tensor<string, []>("input_91_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_91_pad_0 = const()[name = tensor<string, []>("input_91_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_91_strides_0 = const()[name = tensor<string, []>("input_91_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_91_dilations_0 = const()[name = tensor<string, []>("input_91_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_91_groups_0 = const()[name = tensor<string, []>("input_91_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 512, 3, 3]> const_32_to_fp16 = const()[name = tensor<string, []>("const_32_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(7923520)))];
            tensor<fp16, [512]> const_33_to_fp16 = const()[name = tensor<string, []>("const_33_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12642176)))];
            tensor<fp16, [1, 512, 7, 7]> out_13_cast_fp16 = conv(bias = const_33_to_fp16, dilations = input_91_dilations_0, groups = input_91_groups_0, pad = input_91_pad_0, pad_type = input_91_pad_type_0, strides = input_91_strides_0, weight = const_32_to_fp16, x = input_89_cast_fp16)[name = tensor<string, []>("out_13_cast_fp16")];
            tensor<string, []> input_93_pad_type_0 = const()[name = tensor<string, []>("input_93_pad_type_0"), val = tensor<string, []>("valid")];
            tensor<int32, [2]> input_93_strides_0 = const()[name = tensor<string, []>("input_93_strides_0"), val = tensor<int32, [2]>([2, 2])];
            tensor<int32, [4]> input_93_pad_0 = const()[name = tensor<string, []>("input_93_pad_0"), val = tensor<int32, [4]>([0, 0, 0, 0])];
            tensor<int32, [2]> input_93_dilations_0 = const()[name = tensor<string, []>("input_93_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_93_groups_0 = const()[name = tensor<string, []>("input_93_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 256, 1, 1]> const_34_to_fp16 = const()[name = tensor<string, []>("const_34_to_fp16"), val = tensor<fp16, [512, 256, 1, 1]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12643264)))];
            tensor<fp16, [512]> const_35_to_fp16 = const()[name = tensor<string, []>("const_35_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12905472)))];
            tensor<fp16, [1, 512, 7, 7]> identity_cast_fp16 = conv(bias = const_35_to_fp16, dilations = input_93_dilations_0, groups = input_93_groups_0, pad = input_93_pad_0, pad_type = input_93_pad_type_0, strides = input_93_strides_0, weight = const_34_to_fp16, x = input_83_cast_fp16)[name = tensor<string, []>("identity_cast_fp16")];
            tensor<fp16, [1, 512, 7, 7]> input_95_cast_fp16 = add(x = out_13_cast_fp16, y = identity_cast_fp16)[name = tensor<string, []>("input_95_cast_fp16")];
            tensor<fp16, [1, 512, 7, 7]> input_97_cast_fp16 = relu(x = input_95_cast_fp16)[name = tensor<string, []>("input_97_cast_fp16")];
            tensor<string, []> input_99_pad_type_0 = const()[name = tensor<string, []>("input_99_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_99_pad_0 = const()[name = tensor<string, []>("input_99_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_99_strides_0 = const()[name = tensor<string, []>("input_99_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_99_dilations_0 = const()[name = tensor<string, []>("input_99_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_99_groups_0 = const()[name = tensor<string, []>("input_99_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 512, 3, 3]> const_36_to_fp16 = const()[name = tensor<string, []>("const_36_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(12906560)))];
            tensor<fp16, [512]> const_37_to_fp16 = const()[name = tensor<string, []>("const_37_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17625216)))];
            tensor<fp16, [1, 512, 7, 7]> input_101_cast_fp16 = conv(bias = const_37_to_fp16, dilations = input_99_dilations_0, groups = input_99_groups_0, pad = input_99_pad_0, pad_type = input_99_pad_type_0, strides = input_99_strides_0, weight = const_36_to_fp16, x = input_97_cast_fp16)[name = tensor<string, []>("input_101_cast_fp16")];
            tensor<fp16, [1, 512, 7, 7]> input_103_cast_fp16 = relu(x = input_101_cast_fp16)[name = tensor<string, []>("input_103_cast_fp16")];
            tensor<string, []> input_105_pad_type_0 = const()[name = tensor<string, []>("input_105_pad_type_0"), val = tensor<string, []>("custom")];
            tensor<int32, [4]> input_105_pad_0 = const()[name = tensor<string, []>("input_105_pad_0"), val = tensor<int32, [4]>([1, 1, 1, 1])];
            tensor<int32, [2]> input_105_strides_0 = const()[name = tensor<string, []>("input_105_strides_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, [2]> input_105_dilations_0 = const()[name = tensor<string, []>("input_105_dilations_0"), val = tensor<int32, [2]>([1, 1])];
            tensor<int32, []> input_105_groups_0 = const()[name = tensor<string, []>("input_105_groups_0"), val = tensor<int32, []>(1)];
            tensor<fp16, [512, 512, 3, 3]> const_38_to_fp16 = const()[name = tensor<string, []>("const_38_to_fp16"), val = tensor<fp16, [512, 512, 3, 3]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(17626304)))];
            tensor<fp16, [512]> const_39_to_fp16 = const()[name = tensor<string, []>("const_39_to_fp16"), val = tensor<fp16, [512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22344960)))];
            tensor<fp16, [1, 512, 7, 7]> out_cast_fp16 = conv(bias = const_39_to_fp16, dilations = input_105_dilations_0, groups = input_105_groups_0, pad = input_105_pad_0, pad_type = input_105_pad_type_0, strides = input_105_strides_0, weight = const_38_to_fp16, x = input_103_cast_fp16)[name = tensor<string, []>("out_cast_fp16")];
            tensor<fp16, [1, 512, 7, 7]> input_107_cast_fp16 = add(x = out_cast_fp16, y = input_97_cast_fp16)[name = tensor<string, []>("input_107_cast_fp16")];
            tensor<fp16, [1, 512, 7, 7]> input_109_cast_fp16 = relu(x = input_107_cast_fp16)[name = tensor<string, []>("input_109_cast_fp16")];
            tensor<int32, [2]> x_axes_0 = const()[name = tensor<string, []>("x_axes_0"), val = tensor<int32, [2]>([-2, -1])];
            tensor<bool, []> x_keep_dims_0 = const()[name = tensor<string, []>("x_keep_dims_0"), val = tensor<bool, []>(true)];
            tensor<fp16, [1, 512, 1, 1]> x_cast_fp16 = reduce_mean(axes = x_axes_0, keep_dims = x_keep_dims_0, x = input_109_cast_fp16)[name = tensor<string, []>("x_cast_fp16")];
            tensor<int32, [2]> concat_0 = const()[name = tensor<string, []>("concat_0"), val = tensor<int32, [2]>([1, 512])];
            tensor<fp16, [1, 512]> input_111_cast_fp16 = reshape(shape = concat_0, x = x_cast_fp16)[name = tensor<string, []>("input_111_cast_fp16")];
            tensor<fp16, [10, 512]> fc_1_weight_to_fp16 = const()[name = tensor<string, []>("fc_1_weight_to_fp16"), val = tensor<fp16, [10, 512]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22346048)))];
            tensor<fp16, [10]> fc_1_bias_to_fp16 = const()[name = tensor<string, []>("fc_1_bias_to_fp16"), val = tensor<fp16, [10]>(BLOBFILE(path = tensor<string, []>("@model_path/weights/weight.bin"), offset = tensor<uint64, []>(22356352)))];
            tensor<fp16, [1, 10]> linear_0_cast_fp16 = linear(bias = fc_1_bias_to_fp16, weight = fc_1_weight_to_fp16, x = input_111_cast_fp16)[name = tensor<string, []>("linear_0_cast_fp16")];
            tensor<string, []> linear_0_cast_fp16_to_fp32_dtype_0 = const()[name = tensor<string, []>("linear_0_cast_fp16_to_fp32_dtype_0"), val = tensor<string, []>("fp32")];
            tensor<fp32, [1, 10]> var_366 = cast(dtype = linear_0_cast_fp16_to_fp32_dtype_0, x = linear_0_cast_fp16)[name = tensor<string, []>("cast_1")];
        } -> (var_366);
}